// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetPaperApiPaperGetResponse, SubmitPaperApiSubmitPostData, SubmitPaperApiSubmitPostResponse, GetResultOfPaerApiResultSpecificGetData, GetResultOfPaerApiResultSpecificGetResponse, GetMyResultOnlyMetaApiResultMetaMeGetResponse, GetStudentResultOnlyMetaApiResultMetaGetData, GetStudentResultOnlyMetaApiResultMetaGetResponse, GetStudentsApiStudentsGetResponse, SignUpApiSignUpPostData, SignUpApiSignUpPostResponse, SignInApiSignInPostData, SignInApiSignInPostResponse, GetMeApiUserMeGetResponse } from './types.gen';

export class DefaultService {
    /**
     * Get Paper
     * @returns GetTestPaperResponse Successful Response
     * @throws ApiError
     */
    public static getPaperApiPaperGet(): CancelablePromise<GetPaperApiPaperGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/paper'
        });
    }
    
    /**
     * Submit Paper
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSubmitResponse Successful Response
     * @throws ApiError
     */
    public static submitPaperApiSubmitPost(data: SubmitPaperApiSubmitPostData): CancelablePromise<SubmitPaperApiSubmitPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/submit',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Result Of Paer
     * @param data The data for the request.
     * @param data.paperId
     * @param data.testId
     * @returns GetPaperResponse Successful Response
     * @throws ApiError
     */
    public static getResultOfPaerApiResultSpecificGet(data: GetResultOfPaerApiResultSpecificGetData): CancelablePromise<GetResultOfPaerApiResultSpecificGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/result/specific',
            query: {
                paper_id: data.paperId,
                test_id: data.testId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get My Result Only Meta
     * @returns GetResultResponse Successful Response
     * @throws ApiError
     */
    public static getMyResultOnlyMetaApiResultMetaMeGet(): CancelablePromise<GetMyResultOnlyMetaApiResultMetaMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/result/meta/me'
        });
    }
    
    /**
     * Get Student Result Only Meta
     * @param data The data for the request.
     * @param data.studentId
     * @returns GetResultResponse Successful Response
     * @throws ApiError
     */
    public static getStudentResultOnlyMetaApiResultMetaGet(data: GetStudentResultOnlyMetaApiResultMetaGetData): CancelablePromise<GetStudentResultOnlyMetaApiResultMetaGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/result/meta',
            query: {
                student_id: data.studentId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Students
     * @returns GetStudentsResponse Successful Response
     * @throws ApiError
     */
    public static getStudentsApiStudentsGet(): CancelablePromise<GetStudentsApiStudentsGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/students'
        });
    }
    
    /**
     * Sign Up
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static signUpApiSignUpPost(data: SignUpApiSignUpPostData): CancelablePromise<SignUpApiSignUpPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/sign_up',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Sign In
     * @param data The data for the request.
     * @param data.formData
     * @returns Token Successful Response
     * @throws ApiError
     */
    public static signInApiSignInPost(data: SignInApiSignInPostData): CancelablePromise<SignInApiSignInPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/sign_in',
            formData: data.formData,
            mediaType: 'application/x-www-form-urlencoded',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Me
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static getMeApiUserMeGet(): CancelablePromise<GetMeApiUserMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/user/me'
        });
    }
    
}