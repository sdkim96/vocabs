// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetPaperApiV1PapersPaperGetResponse, SubmitPaperApiV1PapersSubmitPostData, SubmitPaperApiV1PapersSubmitPostResponse, GetMyResultOfPaperApiV1ResultsSpecificMeGetData, GetMyResultOfPaperApiV1ResultsSpecificMeGetResponse, GetResultOfPaperOfApiV1ResultsSpecificGetData, GetResultOfPaperOfApiV1ResultsSpecificGetResponse, GetMyResultOnlyMetaApiV1ResultsMetaMeGetResponse, GetStudentResultOnlyMetaApiV1ResultsMetaAllGetData, GetStudentResultOnlyMetaApiV1ResultsMetaAllGetResponse, SignUpApiV1UsersSignUpPostData, SignUpApiV1UsersSignUpPostResponse, SignInApiV1UsersSignInPostData, SignInApiV1UsersSignInPostResponse, GetMeApiV1UsersMeGetResponse, GetStudentsApiV1UsersStudentsGetResponse } from './types.gen';

export class PapersService {
    /**
     * Get Paper
     * @returns GetTestPaperResponse Successful Response
     * @throws ApiError
     */
    public static getPaperApiV1PapersPaperGet(): CancelablePromise<GetPaperApiV1PapersPaperGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/papers/paper'
        });
    }
    
    /**
     * Submit Paper
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PostSubmitResponse Successful Response
     * @throws ApiError
     */
    public static submitPaperApiV1PapersSubmitPost(data: SubmitPaperApiV1PapersSubmitPostData): CancelablePromise<SubmitPaperApiV1PapersSubmitPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/papers/submit',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}

export class ResultsService {
    /**
     * Get My Result Of Paper
     * @param data The data for the request.
     * @param data.paperId
     * @param data.testId
     * @returns GetPaperResponse Successful Response
     * @throws ApiError
     */
    public static getMyResultOfPaperApiV1ResultsSpecificMeGet(data: GetMyResultOfPaperApiV1ResultsSpecificMeGetData): CancelablePromise<GetMyResultOfPaperApiV1ResultsSpecificMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/results/specific/me',
            query: {
                paper_id: data.paperId,
                test_id: data.testId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Result Of Paper Of
     * @param data The data for the request.
     * @param data.studentId
     * @param data.paperId
     * @param data.testId
     * @returns GetPaperResponse Successful Response
     * @throws ApiError
     */
    public static getResultOfPaperOfApiV1ResultsSpecificGet(data: GetResultOfPaperOfApiV1ResultsSpecificGetData): CancelablePromise<GetResultOfPaperOfApiV1ResultsSpecificGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/results/specific',
            query: {
                student_id: data.studentId,
                paper_id: data.paperId,
                test_id: data.testId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get My Result Only Meta
     * @returns GetResultResponse Successful Response
     * @throws ApiError
     */
    public static getMyResultOnlyMetaApiV1ResultsMetaMeGet(): CancelablePromise<GetMyResultOnlyMetaApiV1ResultsMetaMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/results/meta/me'
        });
    }
    
    /**
     * Get Student Result Only Meta
     * @param data The data for the request.
     * @param data.studentId
     * @returns GetResultResponse Successful Response
     * @throws ApiError
     */
    public static getStudentResultOnlyMetaApiV1ResultsMetaAllGet(data: GetStudentResultOnlyMetaApiV1ResultsMetaAllGetData): CancelablePromise<GetStudentResultOnlyMetaApiV1ResultsMetaAllGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/results/meta/all',
            query: {
                student_id: data.studentId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
}

export class UsersService {
    /**
     * Sign Up
     * @param data The data for the request.
     * @param data.requestBody
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static signUpApiV1UsersSignUpPost(data: SignUpApiV1UsersSignUpPostData): CancelablePromise<SignUpApiV1UsersSignUpPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/users/sign_up',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Sign In
     * @param data The data for the request.
     * @param data.formData
     * @returns Token Successful Response
     * @throws ApiError
     */
    public static signInApiV1UsersSignInPost(data: SignInApiV1UsersSignInPostData): CancelablePromise<SignInApiV1UsersSignInPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v1/users/sign_in',
            formData: data.formData,
            mediaType: 'application/x-www-form-urlencoded',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Me
     * @returns UserDTO Successful Response
     * @throws ApiError
     */
    public static getMeApiV1UsersMeGet(): CancelablePromise<GetMeApiV1UsersMeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/users/me'
        });
    }
    
    /**
     * Get Students
     * @returns GetStudentsResponse Successful Response
     * @throws ApiError
     */
    public static getStudentsApiV1UsersStudentsGet(): CancelablePromise<GetStudentsApiV1UsersStudentsGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v1/users/students'
        });
    }
    
}