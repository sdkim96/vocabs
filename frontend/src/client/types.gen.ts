// This file is auto-generated by @hey-api/openapi-ts

export type Answer = {
    u_id?: string;
    content: string;
    checked?: boolean;
};

export type APIStatus = 20000 | 50001 | 50000;

export type Body_sign_in_api_v1_users_sign_in_post = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type Candidate = {
    id?: number;
    u_id?: string;
    text: Text;
    answer?: boolean;
    checked?: boolean;
};

export type Difficulty = 'easy' | 'moderate' | 'hard';

export type GetPaperResponse = {
    request_id?: string;
    status?: APIStatus;
    paper: Paper;
};

export type GetResultResponse = {
    request_id?: string;
    status?: APIStatus;
    papers: Array<PaperMeta>;
};

export type GetStudentsResponse = {
    request_id?: string;
    status?: APIStatus;
    students: Array<UserDTO>;
};

export type GetTestPaperResponse = {
    request_id?: string;
    status?: APIStatus;
    paper: TestPaper_Output;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type Paper = {
    id?: string;
    binded: UserDTO;
    answer_map: {
        [key: string]: unknown;
    };
    problems: Array<Problem>;
};

export type PaperMeta = {
    paper_id: string;
    test_id: string;
    created_at: string;
    updated_at: string;
    score?: (number | null);
};

export type PostSubmitResponse = {
    request_id?: string;
    status?: APIStatus;
    score: number;
    user: UserDTO;
};

/**
 * problem.question: Question()
 * - question.u_id는 problem.u_id과 같은 값
 * problem.answer: Answer()
 * - answer.u_id는 candidate.u_id와 같은 값
 */
export type Problem = {
    id: number;
    u_id?: string;
    difficulty?: Difficulty;
    question_type?: QType;
    candidates: Array<Candidate>;
};

export type QA = {
    question: Question;
    answers: Array<Answer>;
};

/**
 * Korean -> 질문 한국어, 답변 영어
 */
export type QType = 'korean' | 'english';

export type Question = {
    u_id?: string;
    content: string;
};

export type Tag = 'noun' | 'pronoun' | 'verb' | 'adjective' | 'adverb' | 'preposition' | 'conjunction' | 'interjection' | 'undecided';

export type TestPaper_Input = {
    paper_id?: string;
    test_id?: string;
    binded: UserDTO;
    q_a_set: Array<QA>;
};

export type TestPaper_Output = {
    paper_id?: string;
    test_id?: string;
    binded: UserDTO;
    q_a_set: Array<QA>;
};

export type Text = {
    id: number;
    name: string;
    tag?: Tag;
    k_description: string;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UserCreate = {
    name: string;
    password: string;
    user_name?: string;
    user_nickname?: string;
};

export type UserDTO = {
    id?: string;
    name?: string;
    user_name?: string;
    user_nickname?: string;
    user_type?: UType;
};

export type UType = 'student' | 'teacher' | 'guest' | 'admin';

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type GetPaperApiV1PapersPaperGetResponse = (GetTestPaperResponse);

export type SubmitPaperApiV1PapersSubmitPostData = {
    requestBody: TestPaper_Input;
};

export type SubmitPaperApiV1PapersSubmitPostResponse = (PostSubmitResponse);

export type GetMyResultOfPaperApiV1ResultsSpecificMeGetData = {
    paperId: string;
    testId: string;
};

export type GetMyResultOfPaperApiV1ResultsSpecificMeGetResponse = (GetPaperResponse);

export type GetResultOfPaperOfApiV1ResultsSpecificGetData = {
    paperId: string;
    studentId: string;
    testId: string;
};

export type GetResultOfPaperOfApiV1ResultsSpecificGetResponse = (GetPaperResponse);

export type GetMyResultOnlyMetaApiV1ResultsMetaMeGetResponse = (GetResultResponse);

export type GetStudentResultOnlyMetaApiV1ResultsMetaAllGetData = {
    studentId: string;
};

export type GetStudentResultOnlyMetaApiV1ResultsMetaAllGetResponse = (GetResultResponse);

export type SignUpApiV1UsersSignUpPostData = {
    requestBody: UserCreate;
};

export type SignUpApiV1UsersSignUpPostResponse = (UserDTO);

export type SignInApiV1UsersSignInPostData = {
    formData: Body_sign_in_api_v1_users_sign_in_post;
};

export type SignInApiV1UsersSignInPostResponse = (Token);

export type GetMeApiV1UsersMeGetResponse = (UserDTO);

export type GetStudentsApiV1UsersStudentsGetResponse = (GetStudentsResponse);